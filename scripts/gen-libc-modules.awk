# Generate a header file that defines the MODULE_* macros for each library and
# module we build in glibc.  The library names are pulled in from soversions.i
# and the additional modules are mentioned one-per-line in build.list.
BEGIN {
  PROCINFO["sorted_in"] = "@val_type_asc"
  shlibs = 1
  others = 1000
  libs["OTHERS_BEGIN"] = others++
}

# Skip over comments.
$1 == "#" {
  next
}

# build.list is simply one module per line.
match (FILENAME, ".*build.list") {
  libs[$0] = others++
}

# We have only one special case in soversions.i parsing, which is to replace ld
# with rtld since that's what we call it throughout the sources.
match (FILENAME, ".*soversions.i") {
  name = $2
  if (name == "ld")
    name = "rtld"

  if (!(name in libs)) {
    libs[name] = shlibs++
  }
}

# Finally, print out the header file.
END {
  printf ("/* AUTOGENERATED BY gen-libc-modules.awk, DO NOT EDIT.  */\n")
  i = 1
  print ("\n/* Allowed values for IN_MODULE.  */")
  for (l in libs) {
    printf ("#define MODULE_%s %d\n", l, libs[l])
  }
  print ("\n/* Module names, used in stap-probe.h */")
  for (l in libs) {
    printf ("#if IN_MODULE == MODULE_%s\n", l)
    printf ("# define MODULE_NAME %s\n", l)
    printf ("#endif\n")
  }
}
